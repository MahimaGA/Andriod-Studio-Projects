warning: in the working copy of 'Cupcake/app/build.gradle.kts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/AndroidManifest.xml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/java/com/example/cupcake/CupcakeScreen.kt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/java/com/example/cupcake/MainActivity.kt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/java/com/example/cupcake/data/DataSource.kt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/java/com/example/cupcake/data/OrderUiState.kt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/java/com/example/cupcake/ui/OrderViewModel.kt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/java/com/example/cupcake/ui/SelectOptionScreen.kt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/java/com/example/cupcake/ui/StartOrderScreen.kt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/java/com/example/cupcake/ui/SummaryScreen.kt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/java/com/example/cupcake/ui/components/CommonUi.kt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/java/com/example/cupcake/ui/theme/Color.kt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/java/com/example/cupcake/ui/theme/Theme.kt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/java/com/example/cupcake/ui/theme/Type.kt', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/res/drawable-v24/ic_launcher_foreground.xml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/res/drawable/cupcake.xml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/res/drawable/ic_launcher_background.xml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/res/values/dimens.xml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/res/values/strings.xml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/app/src/main/res/values/themes.xml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/build.gradle.kts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/gradle.properties', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/gradle/libs.versions.toml', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/gradle/wrapper/gradle-wrapper.properties', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/gradlew', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/gradlew.bat', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'Cupcake/settings.gradle.kts', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/Cupcake/app/src/main/java/com/example/cupcake/CupcakeScreen.kt b/Cupcake/app/src/main/java/com/example/cupcake/CupcakeScreen.kt[m
[1mindex 7535e13..5fd5afc 100644[m
[1m--- a/Cupcake/app/src/main/java/com/example/cupcake/CupcakeScreen.kt[m
[1m+++ b/Cupcake/app/src/main/java/com/example/cupcake/CupcakeScreen.kt[m
[36m@@ -50,6 +50,13 @@[m [mimport com.example.cupcake.ui.OrderViewModel[m
 import com.example.cupcake.ui.SelectOptionScreen[m
 import com.example.cupcake.ui.StartOrderScreen[m
 [m
[32m+[m[32menum class CupcakeScreen(@StringRes val title: Int) {[m
[32m+[m[32m    Start(title = R.string.app_name),[m
[32m+[m[32m    Flavor(title = R.string.choose_flavor),[m
[32m+[m[32m    Pickup(title = R.string.choose_pickup_date),[m
[32m+[m[32m    Summary(title = R.string.order_summary)[m
[32m+[m[32m}[m
[32m+[m
 /**[m
  * Composable that displays the topBar and displays back button if back navigation is possible.[m
  */[m
[36m@@ -58,8 +65,8 @@[m [mimport com.example.cupcake.ui.StartOrderScreen[m
 fun CupcakeAppBar([m
     currentScreen: CupcakeScreen,[m
     canNavigateBack: Boolean,[m
[31m-    navigateUp: () -> Unit = {},[m
[31m-    modifier: Modifier = Modifier[m
[32m+[m[32m    modifier: Modifier = Modifier,[m
[32m+[m[32m    navigateUp: () -> Unit = {}[m
 ) {[m
     TopAppBar([m
         title = { Text(stringResource(currentScreen.title)) },[m
[36m@@ -115,7 +122,7 @@[m [mfun CupcakeApp([m
                     },[m
                     modifier = Modifier[m
                         .fillMaxSize()[m
[31m-                        .padding(dimensionResource(R.dimen.padding_medium)),[m
[32m+[m[32m                        .padding(dimensionResource(R.dimen.padding_medium))[m
                 )[m
             }[m
             composable(route = CupcakeScreen.Flavor.name) {[m
[36m@@ -156,26 +163,10 @@[m [mfun CupcakeApp([m
                     modifier = Modifier.fillMaxHeight()[m
                 )[m
             }[m
[31m-[m
         }[m
     }[m
 }[m
 [m
[31m-enum class CupcakeScreen(@StringRes val title: Int) {[m
[31m-    Start(title = R.string.app_name),[m
[31m-    Flavor(title = R.string.choose_flavor),[m
[31m-    Pickup(title = R.string.choose_pickup_date),[m
[31m-    Summary(title = R.string.order_summary)[m
[31m-}[m
[31m-[m
[31m-private fun cancelOrderAndNavigateToStart([m
[31m-    viewModel: OrderViewModel,[m
[31m-    navController: NavHostController[m
[31m-) {[m
[31m-    viewModel.resetOrder()[m
[31m-    navController.popBackStack(CupcakeScreen.Start.name, inclusive = false)[m
[31m-}[m
[31m-[m
 private fun shareOrder(context: Context, subject: String, summary: String) {[m
     val intent = Intent(Intent.ACTION_SEND).apply {[m
         type = "text/plain"[m
[36m@@ -188,4 +179,12 @@[m [mprivate fun shareOrder(context: Context, subject: String, summary: String) {[m
             context.getString(R.string.new_cupcake_order)[m
         )[m
     )[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mprivate fun cancelOrderAndNavigateToStart([m
[32m+[m[32m    viewModel: OrderViewModel,[m
[32m+[m[32m    navController: NavHostController[m
[32m+[m[32m) {[m
[32m+[m[32m    viewModel.resetOrder()[m
[32m+[m[32m    navController.popBackStack(CupcakeScreen.Start.name, inclusive = false)[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/Cupcake/app/src/main/java/com/example/cupcake/ui/SelectOptionScreen.kt b/Cupcake/app/src/main/java/com/example/cupcake/ui/SelectOptionScreen.kt[m
[1mindex ccb10c4..c2ac039 100644[m
[1m--- a/Cupcake/app/src/main/java/com/example/cupcake/ui/SelectOptionScreen.kt[m
[1m+++ b/Cupcake/app/src/main/java/com/example/cupcake/ui/SelectOptionScreen.kt[m
[36m@@ -50,16 +50,15 @@[m [mimport com.example.cupcake.ui.components.FormattedPriceLabel[m
 fun SelectOptionScreen([m
     subtotal: String,[m
     options: List<String>,[m
[32m+[m[32m    modifier: Modifier = Modifier,[m
     onSelectionChanged: (String) -> Unit = {},[m
     onCancelButtonClicked: () -> Unit = {},[m
[31m-    onNextButtonClicked: () -> Unit = {},[m
[31m-    modifier: Modifier = Modifier[m
[32m+[m[32m    onNextButtonClicked: () -> Unit = {}[m
 ){[m
     var selectedValue by rememberSaveable { mutableStateOf("") }[m
 [m
     Column([m
[31m-        modifier = modifier,[m
[31m-        verticalArrangement = Arrangement.SpaceBetween[m
[32m+[m[32m        modifier = modifier[m
     ) {[m
         Column(modifier = Modifier.padding(dimensionResource(R.dimen.padding_medium))){[m
             options.forEach { item ->[m
[36m@@ -108,13 +107,14 @@[m [mfun SelectOptionScreen([m
             OutlinedButton([m
                 modifier = Modifier.weight(1f),[m
                 onClick = onCancelButtonClicked[m
[31m-            ) {                Text(stringResource(R.string.cancel))[m
[32m+[m[32m            ) {[m
[32m+[m[32m                Text(stringResource(R.string.cancel))[m
             }[m
             Button([m
                 modifier = Modifier.weight(1f),[m
                 // the button is enabled when the user makes a selection[m
                 enabled = selectedValue.isNotEmpty(),[m
[31m-                onClick = {onNextButtonClicked}[m
[32m+[m[32m                onClick = onNextButtonClicked[m
             ) {[m
                 Text(stringResource(R.string.next))[m
             }[m
[1mdiff --git a/Cupcake/app/src/main/java/com/example/cupcake/ui/StartOrderScreen.kt b/Cupcake/app/src/main/java/com/example/cupcake/ui/StartOrderScreen.kt[m
[1mindex 5c94926..65c0004 100644[m
[1m--- a/Cupcake/app/src/main/java/com/example/cupcake/ui/StartOrderScreen.kt[m
[1m+++ b/Cupcake/app/src/main/java/com/example/cupcake/ui/StartOrderScreen.kt[m
[36m@@ -54,8 +54,7 @@[m [mfun StartOrderScreen([m
     modifier: Modifier = Modifier[m
 ){[m
     Column([m
[31m-        modifier = modifier,[m
[31m-        verticalArrangement = Arrangement.SpaceBetween[m
[32m+[m[32m        modifier = modifier[m
     ) {[m
         Column([m
             modifier = Modifier.fillMaxWidth(),[m
[1mdiff --git a/Cupcake/app/src/main/java/com/example/cupcake/ui/SummaryScreen.kt b/Cupcake/app/src/main/java/com/example/cupcake/ui/SummaryScreen.kt[m
[1mindex 0441bd1..ab322d7 100644[m
[1m--- a/Cupcake/app/src/main/java/com/example/cupcake/ui/SummaryScreen.kt[m
[1m+++ b/Cupcake/app/src/main/java/com/example/cupcake/ui/SummaryScreen.kt[m
[36m@@ -79,8 +79,7 @@[m [mfun OrderSummaryScreen([m
     )[m
 [m
     Column([m
[31m-        modifier = modifier,[m
[31m-        verticalArrangement = Arrangement.SpaceBetween[m
[32m+[m[32m        modifier = modifier[m
     ) {[m
         Column([m
             modifier = Modifier.padding(dimensionResource(R.dimen.padding_medium)),[m
[36m@@ -107,7 +106,7 @@[m [mfun OrderSummaryScreen([m
             ) {[m
                 Button([m
                     modifier = Modifier.fillMaxWidth(),[m
[31m-                    onClick = {onSendButtonClicked(newOrder, orderSummary)}[m
[32m+[m[32m                    onClick = { onSendButtonClicked(newOrder, orderSummary) }[m
                 ) {[m
                     Text(stringResource(R.string.send))[m
                 }[m
[36m@@ -125,12 +124,10 @@[m [mfun OrderSummaryScreen([m
 @Preview[m
 @Composable[m
 fun OrderSummaryPreview(){[m
[31m-    [m
     CupcakeTheme {[m
[31m-[m
         OrderSummaryScreen([m
             orderUiState = OrderUiState(0, "Test", "Test", "$300.00"),[m
[31m-            onSendButtonClicked = { subject: String, summary: String -> },[m
[32m+[m[32m            onSendButtonClicked = { _: String, _: String -> },[m
             onCancelButtonClicked = {},[m
             modifier = Modifier.fillMaxHeight()[m
         )[m
